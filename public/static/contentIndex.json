{"Blender-Archive/Meta-Drafts/ChatGPT-Insight":{"slug":"Blender-Archive/Meta-Drafts/ChatGPT-Insight","filePath":"Blender Archive/Meta Drafts/ChatGPT Insight.md","title":"ChatGPT Insight","links":[],"tags":[],"content":"chatgpt.com/c/68879631-a370-8003-8d85-cb49d542f025\nmicrosoft copilot came up with the idea of making render.md files in obsidian to catalogue all my 3d renders\ntheir raw output dumps, .blend files, and associated ideas and assets are all stored on Telegram\nthe general idea is\n‚Äúrender.md‚Äù exists locally as a reference file\nit contains yaml frontmatter for tagging and sorting\nthe render/image displayed via hotlink from an online host\nsome notes about the render\nlinks to telegram showing where to find all the associated files that are backed up/archived on telegram\nlinks to social media/blog posts where the render has been posted\nthe .md file which is only 3kb displays the render and shows where gigabytes worth of data that‚Äôs backed up across several different Telegram chats and channels.\n\nThat‚Äôs a smart and elegant system ‚Äî lightweight, centralized reference files (render.md) that link out to heavy assets and contextual info. This lets you keep your working environment (like Obsidian) fast and clean while cataloguing large and distributed creative work.\nHere‚Äôs how you could structure the render.md file as a standard template, balancing clarity, functionality, and long-term maintainability:\n\nüßæ render.md Template\n---\ntitle: &quot;Mecha Raven v2&quot;\ndate: 2025-07-28\ntags: [mecha, raven, cyberpunk, night, Blender]\nstatus: finished\nsoftware: [Blender, Photoshop]\nrender_engine: Cycles\nresolution: 3840x2160\naspect_ratio: 16:9\ntheme: &quot;Urban Night | Bio-mechanical&quot;\n---\n \n![Render Preview](your-image-hosting.com/mecha-raven-v2.jpg)\n \n## üß† Concept &amp; Notes\n \nRefinement of previous Mecha Raven concept. Focus on feather-like mechanical plating and neon-blue underglow. Reworked background to better evoke depth and urban scale.\n \n- Added subtle lens flare for cinematic feel\n- Tried new shader layering for feathers\n- Need to revisit eyes if version 3 is planned\n \n## üìÅ Telegram Archive\n \n- üì¶ `.blend` file: [Telegram Message ¬ª](t.me/your_archive_channel/123)\n- üñºÔ∏è Raw Render Output (OpenEXR, PNG): [Telegram Message ¬ª](t.me/your_archive_channel/124)\n- üéµ Music Reference: [Telegram Note ¬ª](t.me/your_inspo_group/99)\n- üóíÔ∏è Notes &amp; Sketches: [Telegram Thread ¬ª](t.me/your_personal_notes/56)\n \n## üåê Posted To\n \n- üê¶ Twitter/X: [View Post ¬ª](x.com/youraccount/status/xxxx)\n- üñºÔ∏è ArtStation: [View Project ¬ª](www.artstation.com/artwork/xxxx)\n- üìù Blog: [Read Entry ¬ª](yourblog.com/mecha-raven-v2)\n \n## üîÅ Version History\n \n- v1: Original test with simple emissives [#Render_001]\n- v2 (this): Full refinement pass, published version\n- v3 (planned): Redesign of eyes and wings with AI cloth sim\n\n‚úÖ Benefits of this System\n\n\nScalability: Each render has its own self-contained .md file (just a few KB), but fully maps to gigabytes of assets archived elsewhere.\n\n\nOffline Usability: Still useful even if Telegram or image host is temporarily down.\n\n\nObsidian Integration: Enables tag-based search, backlinks, graph view, etc.\n\n\nFuture-proof: Frontmatter supports easy parsing into gallery systems, static sites (like Hugo), or even automation scripts.\n\n\n\nüõ† Tips to Level It Up\n\n\nTag Standardization: Create a fixed taxonomy for tags like status, theme, or render_engine to keep sorting clean.\n\n\nAuto-Sync with Telegram: Use tools like Telethon (Python library) to periodically dump links from specific Telegram chats if you want an auto-updated archive.\n\n\nBulk Viewer: Use an Obsidian plugin or a script to generate a gallery view across all render.md files.\n\n\nBacklinking: Add backlinks in your Telegram chats (via pinned messages or hashtags) so the .md and Telegram references stay in sync both ways.\n\n\nWould you like a script or Obsidian plugin suggestion to manage this at scale (e.g. auto-index all render.md files into a gallery or dashboard)?\n"},"Blender-Archive/Meta-Drafts/Style-Guide":{"slug":"Blender-Archive/Meta-Drafts/Style-Guide","filePath":"Blender Archive/Meta Drafts/Style Guide.md","title":"Style Guide","links":[],"tags":[],"content":"Vault Style Guide\nA living document for maintaining consistent, query-friendly metadata and folder structure across your markdown vault.\n\n1. Frontmatter Overview\nEvery note begins with a YAML frontmatter block. Keep it minimal, ordered, and self-documenting.\n---\ntitle:                # Human-readable note title\ndate: YYYY-MM-DD      # ISO 8601 format\nproject:              # Parent project or collection\nuniverse:             # Fictional world or context\ncharacters:           # List of involved characters\n  - Name1\n  - Name2\ntags:                 # Unordered list of keywords\n  - tag1\n  - tag2\nis_nsfw: false        # Boolean flag; true if NSFW, false or omit if SFW\n---\n\n2. Field Definitions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFieldTypeRequiredDescriptiontitlestringyesDescriptive, sentence-case titledatedateyesPublication or creation dateprojectstringnoParent project nameuniversestringnoSetting or worldcharacterslistnoKey individuals featuredtagslistnoKeywords for filtering by medium, software, theme, etc.is_nsfwbooleannotrue = NSFW, false = SFW (or omitted for SFW)\n\n3. Content Rating\nUse is_nsfw to distinguish SFW from NSFW.\n\nSet is_nsfw: true for any erotic or explicit assets.\nOmit or set is_nsfw: false for all other content.\n\nYour Dataview queries should treat missing as false:\nTABLE title, date\nFROM &quot;renders/&quot;\nWHERE choice(is_nsfw, false) = false\n\n4. Tagging Conventions\n\nUse lowercase, kebab-case or slash-separated hierarchies.\nPrefix with category if helpful:\n\nsoftware/blender\nmedium/3d-render\ntheme/wedding\n\n\n\nAvoid mixing metadata into tags; reserve tags for free-form filters.\n\n5. File Naming\nAdopt a clear, sortable filename convention:\nYYYY-MM-DD ‚Äî Short Title ‚Äî project-slug.ext\nExample:\n2025-03-01 ‚Äî Eternal-Bonding-VI ‚Äî ffxiv-wedding.blend\n\n\nISO date prefix ensures chronological sort.\nEm-dashes separate elements.\nProject slug ties back to project field.\n\n\n6. Dataview Query Patterns\nList all NSFW entries\nTABLE title, date \nFROM &quot;renders/&quot; \nWHERE is_nsfw = true\nCount SFW vs NSFW\nTABLE \n  sum(choice(is_nsfw, false) = false ? 1 : 0) AS SFW,\n  sum(choice(is_nsfw, false) = true  ? 1 : 0) AS NSFW\nFROM &quot;renders/&quot;\nFind notes missing is_nsfw\nTABLE file.name AS File \nFROM &quot;renders/&quot; \nWHERE !contains(file.frontmatter, &quot;is_nsfw&quot;)\n\n7. Auditing and Hydration\n\nRun the ‚Äúmissing flag‚Äù query to locate uncategorized notes.\nManually add is_nsfw: false or confirm true where needed.\nTag and link each note to its parent project index for index-first navigation.\n\n\n8. Future Extensions\n\nAdd is_suggestive: true for mild content gradations.\nReplace booleans with content_rating: [sfw|suggestive|nsfw] if tiers multiply.\nIntroduce age_rating for audience maturity levels.\n\nMaintain a changelog at the bottom of this guide for schema updates.\n\n9. Revision History\n\n\n\n\n\n\n\n\n\n\n\n\n\nDateChange2025-07-27Initial style guide draft\n\nWith this style guide in place, your vault remains consistent, queries stay robust, and collaborators know exactly how to contribute."},"Blender-Archive/Meta-Drafts/render.md-template-v2":{"slug":"Blender-Archive/Meta-Drafts/render.md-template-v2","filePath":"Blender Archive/Meta Drafts/render.md template v2.md","title":"[object Object]","links":[],"tags":[],"content":"\nNotes\n{{blurb about ritual/process/render intent}}\nTelegram\n{{list of archive links}}\nPosts\n{{social embeds}}"},"Blender-Archive/Meta-Drafts/render.md-template":{"slug":"Blender-Archive/Meta-Drafts/render.md-template","filePath":"Blender Archive/Meta Drafts/render.md template.md","title":"[object Object]","links":["{{render.high_res_local}}","{{telegram.render_post}}","{{telegram.blend_post}}","{{telegram.direct_blend}}"],"tags":["blender","render","telegram-archive"],"content":"\nDownload high-res local render\n\nTelegram Links\n\nRender post\nBlend post\nDirect .blend download\n\n\nSocial Embeds\n\nBluesky: \nTwitter: \n\n\nNotes\n{{personal_blurb}}"},"Blender-Archive/Renders/2025-03-01-FFXIV-2025-Wedding-Anniversary":{"slug":"Blender-Archive/Renders/2025-03-01-FFXIV-2025-Wedding-Anniversary","filePath":"Blender Archive/Renders/2025-03-01 FFXIV 2025 Wedding Anniversary.md","title":"Ceremony of Eternal Bonding VI","links":[],"tags":["blender","render"],"content":"\n\n\nNotes\nSixth annual wedding anniversary render featuring Iriali and Vallia. Their in character marriage (Initially July 2019, ) coincides with the actual date of our (Tiggs and I) wedding anniversary. Each year I try to make a new unique render featuring them celebrating together in with a wholesome depiction of their shared love and growth together.\n\nTelegram\nDrak‚Äôs Works (Index): t.me/c/2808674563/3/43\nDrakon‚Äôs WIPs (Output Archive) t.me/c/1653650380/896\nDrakon‚Äôs Blender Dump (.blend Archive) t.me/c/1716428122/253\n\nPosts\nBluesky\ntitle: &quot;Drakon (@drakon.bsky.social)&quot;\nimage: &quot;cdn.bsky.app/img/feed_fullsize/plain/did:plc:vigxa24owwfxyoe5nnweh7i4/bafkreigw5beby32q7ieinnskjwvyaulezt5smc63l5g4tji2uiky5l7aqi@jpeg&quot;\ndescription: &quot;Ok, just lean over- and... now kith!  Happy anniversary, @tigerbun.bsky.social! üíù  #FFXIV #B3D #OC #Vallia #Iriali&quot;\nurl: &quot;bsky.app/profile/drakon.bsky.social/post/3ljdu35lr4s23&quot;\nfavicon: &quot;&quot;\ntitle: &quot;Drakon (@drakon.bsky.social)&quot;\nimage: &quot;cdn.bsky.app/img/feed_fullsize/plain/did:plc:vigxa24owwfxyoe5nnweh7i4/bafkreid2xwqwfkbmyfcr3nso65mu7jmku26jkmcpnurhq2hox5zuo7r6oq@jpeg&quot;\ndescription: &quot;üíï #FFXIV #GPosers #B3D #OC #Vallia #Iriali&quot;\nurl: &quot;bsky.app/profile/drakon.bsky.social/post/3lm2kdgq2g22m&quot;\nfavicon: &quot;&quot;\nTwitter\ntitle: &quot;Drakon (@IncendiaDrakon)&quot;\nimage: &quot;pbs.twimg.com/media/Gk_CZ_LXQAAjglh.jpg&quot;\ndescription: &quot;Ok, just lean over- and... now kith!  Happy anniversary, Tiggs! üíù&quot;\nurl: &quot;fixupx.com/IncendiaDrakon/status/1895947802842431568&quot;\nfavicon: &quot;&quot;\naspectRatio: &quot;56.25&quot;\ntitle: &quot;Drakon (@IncendiaDrakon)&quot;\nimage: &quot;pbs.twimg.com/media/GpI_qRtXwAA8ext.jpg&quot;\ndescription: &quot;üíï&quot;\nurl: &quot;fixupx.com/IncendiaDrakon/status/1914662789471232467&quot;\nfavicon: &quot;&quot;\naspectRatio: &quot;130.57671381936888&quot;\n"},"Blender-Archive/üìá-Index":{"slug":"Blender-Archive/üìá-Index","filePath":"Blender Archive/üìá Index.md","title":"üìá Index","links":[],"tags":[],"content":"Obsidian property search example: [‚Äúcharacters‚Äù:Iriali]\n\ndv.table(\n  [&quot;Preview&quot;, &quot;Title&quot;, &quot;Date&quot;, &quot;Universe&quot;, &quot;Characters&quot;],\n  dv.pages(&#039;#render&#039;)\n    .filter(p =&gt; p.image &amp;&amp; p.title &amp;&amp; p.date &amp;&amp; p.universe &amp;&amp; p.characters)\n    .sort(p =&gt; p.date, &quot;desc&quot;)\n    .map(p =&gt; [\n      `![|100](${p.image})`, // Thumbnail preview (100px wide)\n      p.file.link,\n      p.date,\n      p.universe,\n      Array.isArray(p.characters) ? p.characters.join(&quot;, &quot;) : p.characters\n    ])\n);"},"Blender-Archive/üìú-Notes":{"slug":"Blender-Archive/üìú-Notes","filePath":"Blender Archive/üìú Notes.md","title":"üìú Notes","links":[],"tags":[],"content":"Not a formal ‚ÄúReadme‚Äù, mostly just a dump of ideas and stuff regarding this Obsidian catalogue for renders/etc.\nInitial Concept\n\nCreating an ‚Äúindex‚Äù for Telegram file dumps.\nBasically, I offload files I want to keep onto Telegram because it offers ‚Äúunlimited 2gb file uploads‚Äù.\nI can‚Äôt edit some aspects regarding the files and messages once they‚Äôre uploaded. Organization and structure can quickly become confusing or bloated on Telegram.\nAn idea I came up with yesterday was to create local index.md and file.md entries locally in my Obsidian vault. I can hotlink to files hosted on Telegram from inside these file.md entries. I can edit the .md at any time, add tags and metdata/yaml for organization. Everything is searchable via Obsidian search.\nMy primary focus is retaining all my Blender work. Organizing my .blend archive on Telegram with local .md files referencing them.\nThe general structure proposed was:\nindex.md: dataview parses all file.md entries and lists them in a table by date for quick and easy reference\nfile.md:\nrelevant yaml frontmatter\ninline embed of online hosted render (preferably from a bluesky account. saves local space by not storing previews locally)\nlink to locally stored high fidelity render\ninline embed of any social media posts (Twitter, Blogger, Bluesky)\nlink to Render Archive Telegram channel post (each post contains a dump of raw .exr .png .webp .psd associated with the final render)\nlink to relevant post in Blender Telegram archive channel (each message in the channel is a dump of each .blend .blend1 .blend 2 etc in addition to any descriptions\ndirect link to relevant final .blend file in Blender Telegram archive\nfollowed by a blurb/etc and any personal notes about the project\n\n\nüìá Index.md: Dataview Table\nconst subfolder = &quot;Blender Archive/Renders&quot;;\n \ndv.table(\n  [&quot;Title&quot;, &quot;Date&quot;, &quot;Universe&quot;, &quot;Characters&quot;],\n  dv.pages(`&quot;${subfolder}&quot;`)\n    .filter(p =&gt; p.title &amp;&amp; p.date &amp;&amp; p.universe &amp;&amp; p.characters)\n    .sort(p =&gt; p.date, &quot;desc&quot;)\n    .map(p =&gt; [\n      p.file.link, // this renders as a proper clickable link\n      p.date,\n      p.universe,\n      Array.isArray(p.characters) ? p.characters.join(&quot;, &quot;) : p.characters\n    ])\n);\n \n\n\nKeeps all your file.md entries in one sortable, filterable table\nAutomatically updates whenever you add a new file.md\n\n\n3. file.md Template\nPlace this in /TelegramFiles/_templates/telegram-file-template.md and duplicate per project:\n---\ntitle: {{title}}                  # e.g. ‚ÄúNebula V4‚Äù\ndate: {{date}}                    # YYYY-MM-DD\ntags: [blender, render, telegram-archive, {{additional_tags}}]\ntelegram:\n  render_post: &quot;t.me/c/{{render_channel_id}}/{{render_message_id}}&quot;\n  blend_post:  &quot;t.me/c/{{blend_channel_id}}/{{blend_message_id}}&quot;\n  direct_blend: &quot;t.me/c/{{blend_channel_id}}/{{blend_message_id}}?download=1&quot;\nrender:\n  preview_online:   &quot;bluesky.app/.../media/...&quot;\n  high_res_local:   &quot;/BlenderRenders/{{title}}.png&quot;\nsocial:\n  - type: bluesky\n    url: &quot;{{bluesky_url}}&quot;\n  - type: twitter\n    url: &quot;{{twitter_url}}&quot;\n---\n \n![Preview]({{render.preview_online}})\n \n[Download high-res local render]({{render.high_res_local}})\n \n---\n \n## Telegram Links\n \n- [Render post]({{telegram.render_post}})\n- [Blend post]({{telegram.blend_post}})\n- [Direct .blend download]({{telegram.direct_blend}})\n \n---\n \n## Social Embeds\n \n- Bluesky: ![]({{social[0].url}})\n- Twitter: ![]({{social[1].url}})\n \n---\n \n## Notes\n \n{{personal_blurb}}\nRender preview repo: whtwnd.com/drakon.bsky.social/3lux7ljvhny2o\n\n\n\nDifferent dataview table versions for Index.md\n\nconst subfolder = &quot;Blender Archive/Renders&quot;;\n \ndv.table(\n  [&quot;Title&quot;, &quot;Date&quot;, &quot;Universe&quot;, &quot;Characters&quot;],\n  dv.pages(`&quot;${subfolder}&quot;`)\n    .filter(p =&gt; p.title &amp;&amp; p.date &amp;&amp; p.universe &amp;&amp; p.characters)\n    .sort(p =&gt; p.date, &quot;desc&quot;)\n    .map(p =&gt; [\n      p.file.link, // this renders as a proper clickable link\n      p.date,\n      p.universe,\n      Array.isArray(p.characters) ? p.characters.join(&quot;, &quot;) : p.characters\n    ])\n);\n \ntable characters\nwhere contains(characters, &quot;Vallia&quot;)\nObsidian property search example: [‚Äúcharacters‚Äù:Iriali]\nFind Vallia\nCharacters: Vallia\ndv.table(\n  [&quot;Preview&quot;, &quot;Title&quot;, &quot;Date&quot;, &quot;Universe&quot;, &quot;Characters&quot;],\n  dv.pages(&#039;&quot;Blender Archive&quot;&#039;)\n    .filter(p =&gt; p.image &amp;&amp; p.title &amp;&amp; p.date &amp;&amp; p.universe &amp;&amp; p.characters)\n    .sort(p =&gt; p.date, &quot;desc&quot;)\n    .map(p =&gt; [\n      `![|100](${p.image})`, // Thumbnail preview (100px wide)\n      p.file.link,\n      p.date,\n      p.universe,\n      Array.isArray(p.characters) ? p.characters.join(&quot;, &quot;) : p.characters\n    ])\n);\ndv.table(\n  [&quot;Preview&quot;, &quot;Title&quot;, &quot;Date&quot;, &quot;Universe&quot;, &quot;Characters&quot;],\n  dv.pages(&#039;#render&#039;)\n    .filter(p =&gt; p.image &amp;&amp; p.title &amp;&amp; p.date &amp;&amp; p.universe &amp;&amp; p.characters)\n    .sort(p =&gt; p.date, &quot;desc&quot;)\n    .map(p =&gt; [\n      `![|100](${p.image})`, // Thumbnail preview (100px wide)\n      p.file.link,\n      p.date,\n      p.universe,\n      Array.isArray(p.characters) ? p.characters.join(&quot;, &quot;) : p.characters\n    ])\n);"},"index":{"slug":"index","filePath":"index.md","title":"Welcome to Quartz","links":[],"tags":[],"content":"This is a blank Quartz installation.\nSee the documentation for how to get started."}}